version: '3.8'

services:
  postgres:
    container_name: evolution-postgres
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: evolution
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - evolution-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d evolution"]
      interval: 10s
      timeout: 5s
      retries: 5

  evolution-api:
    container_name: evolution-api
    image: evoapicloud/evolution-api:v2.3.6
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      # 服务器端口配置
      SERVER_PORT: 8080

      # 认证配置
      AUTHENTICATION_TYPE: apikey
      AUTHENTICATION_API_KEY: ${EVOLUTION_API_KEY:-changeme123}

      # CORS配置
      CORS_ORIGIN: "*"
      CORS_METHODS: "GET,POST,PUT,DELETE"
      CORS_CREDENTIALS: "true"

      # 数据库配置 - Evolution API 2.x需要指定provider
      DATABASE_ENABLED: "true"
      DATABASE_PROVIDER: "postgresql"
      DATABASE_CONNECTION_URI: "postgresql://user:pass@postgres:5432/evolution"
      DATABASE_SAVE_DATA_INSTANCE: "true"
      DATABASE_SAVE_DATA_NEW_MESSAGE: "true"
      DATABASE_SAVE_MESSAGE_UPDATE: "true"
      DATABASE_SAVE_DATA_CONTACTS: "true"
      DATABASE_SAVE_DATA_CHATS: "true"
      DATABASE_SAVE_DATA_LABELS: "false"
      DATABASE_SAVE_DATA_HISTORIC: "false"
      DATABASE_CONNECTION_CLIENT_NAME: "evolution_exchange"

      # WebSocket配置
      WEBSOCKET_ENABLED: "true"
      WEBSOCKET_GLOBAL_EVENTS: "true"

      # 日志配置
      LOG_LEVEL: "info"
      LOG_COLOR: "true"

      # 实例配置
      QRCODE_LIMIT: 30
      DEL_INSTANCE: "false"

      # WhatsApp版本配置 - 留空自动检测
      CONFIG_SESSION_PHONE_VERSION: ""
      CONFIG_SESSION_PHONE_CLIENT: "Evolution API"
      CONFIG_SESSION_PHONE_NAME: "Chrome"
    volumes:
      - evolution_data:/evolution/instances
      - evolution_store:/evolution/store
    networks:
      - evolution-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
    driver: local
  evolution_data:
    driver: local
  evolution_store:
    driver: local

networks:
  evolution-network:
    driver: bridge
